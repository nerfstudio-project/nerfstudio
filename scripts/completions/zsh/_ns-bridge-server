#compdef ns-bridge-server

# AUTOMATICALLY GENERATED by `shtab`


_shtab_tyro_ns_bridge_server_commands() {
  local _commands=(
    
  )
  _describe 'ns-bridge-server commands' _commands
}

_shtab_tyro_ns_bridge_server_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--zmq-port[port to use for zmq (default\: 6000)]:zmq-port:"
  "--websocket-port[port to use for websocket (default\: 7007)]:websocket-port:"
  "--ip-address[host to connect to (default\: 127.0.0.1)]:ip-address:"
  "--use-ngrok[whether to use ngrok to expose the zmq port (sets\: use_ngrok\=True)]"
)


_shtab_tyro_ns_bridge_server() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_tyro_ns_bridge_server_options[(I)${(q)one_or_more}*]} + ${_shtab_tyro_ns_bridge_server_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_tyro_ns_bridge_server_options+=(': :_shtab_tyro_ns_bridge_server_commands' '*::: :->ns-bridge-server')
  fi
  _arguments -C $_shtab_tyro_ns_bridge_server_options

  case $state in
    ns-bridge-server)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_tyro_ns_bridge_server-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args
_shtab_tyro_ns_bridge_server "$@"
