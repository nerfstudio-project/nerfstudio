#compdef ns-export

# AUTOMATICALLY GENERATED by `shtab`


_shtab_tyro_ns_export_commands() {
  local _commands=(
    "cameras:Export camera poses to a .json file."
    "marching-cubes:NOT YET IMPLEMENTED Export a mesh using marching cubes."
    "pointcloud:Export NeRF as a point cloud."
    "poisson:Export a mesh using poisson surface reconstruction."
    "tsdf:Export a mesh using TSDF processing."
  )
  _describe 'ns-export commands' _commands
}

_shtab_tyro_ns_export_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_tyro_ns_export_cameras_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--load-config[Path to the config YAML file. (required)]:load-config:_files"
  "--output-dir[Path to the output directory. (required)]:output-dir:_files -/"
)

_shtab_tyro_ns_export_marching_cubes_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--load-config[Path to the config YAML file. (required)]:load-config:_files"
  "--output-dir[Path to the output directory. (required)]:output-dir:_files -/"
)

_shtab_tyro_ns_export_pointcloud_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--load-config[Path to the config YAML file. (required)]:load-config:_files"
  "--output-dir[Path to the output directory. (required)]:output-dir:_files -/"
  "--num-points[Number of points to generate. May result in less if outlier removal is used. (default\: 1000000)]:num-points:"
  "--remove-outliers[Remove outliers from the point cloud. (default\: True)]:remove-outliers:(True False)"
  "--estimate-normals[Estimate normals for the point cloud. (default\: False)]:estimate-normals:(True False)"
  "--depth-output-name[Name of the depth output. (default\: depth)]:depth-output-name:"
  "--rgb-output-name[Name of the RGB output. (default\: rgb)]:rgb-output-name:"
  "--use-bounding-box[Only query points within the bounding box (default\: True)]:use-bounding-box:(True False)"
  "--bounding-box-min[Minimum of the bounding box, used if use_bounding_box is True. (default\: -1 -1 -1)]:bounding-box-min:"
  "--bounding-box-max[Maximum of the bounding box, used if use_bounding_box is True. (default\: 1 1 1)]:bounding-box-max:"
  "--num-rays-per-batch[Number of rays to evaluate per batch. Decrease if you run out of memory. (default\: 32768)]:num-rays-per-batch:"
  "--std-ratio[Threshold based on STD of the average distances across the point cloud to remove outliers. (default\: 10.0)]:std-ratio:"
)

_shtab_tyro_ns_export_poisson_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--load-config[Path to the config YAML file. (required)]:load-config:_files"
  "--output-dir[Path to the output directory. (required)]:output-dir:_files -/"
  "--num-points[Number of points to generate. May result in less if outlier removal is used. (default\: 1000000)]:num-points:"
  "--remove-outliers[Remove outliers from the point cloud. (default\: True)]:remove-outliers:(True False)"
  "--depth-output-name[Name of the depth output. (default\: depth)]:depth-output-name:"
  "--rgb-output-name[Name of the RGB output. (default\: rgb)]:rgb-output-name:"
  "--normal-method[Method to estimate normals with. (default\: model_output)]:normal-method:(open3d model_output)"
  "--normal-output-name[Name of the normal output. (default\: normals)]:normal-output-name:"
  "--save-point-cloud[Whether to save the point cloud. (default\: False)]:save-point-cloud:(True False)"
  "--use-bounding-box[Only query points within the bounding box (default\: True)]:use-bounding-box:(True False)"
  "--bounding-box-min[Minimum of the bounding box, used if use_bounding_box is True. (default\: -1 -1 -1)]:bounding-box-min:"
  "--bounding-box-max[Minimum of the bounding box, used if use_bounding_box is True. (default\: 1 1 1)]:bounding-box-max:"
  "--num-rays-per-batch[Number of rays to evaluate per batch. Decrease if you run out of memory. (default\: 32768)]:num-rays-per-batch:"
  "--texture-method[Method to texture the mesh with. Either \'point_cloud\' or \'nerf\'. (default\: nerf)]:texture-method:(point_cloud nerf)"
  "--px-per-uv-triangle[Number of pixels per UV triangle. (default\: 4)]:px-per-uv-triangle:"
  "--unwrap-method[The method to use for unwrapping the mesh. (default\: xatlas)]:unwrap-method:(xatlas custom)"
  "--num-pixels-per-side[If using xatlas for unwrapping, the pixels per side of the texture image. (default\: 2048)]:num-pixels-per-side:"
  "--target-num-faces[Target number of faces for the mesh to texture. (default\: 50000)]:target-num-faces:"
  "--std-ratio[Threshold based on STD of the average distances across the point cloud to remove outliers. (default\: 10.0)]:std-ratio:"
)

_shtab_tyro_ns_export_tsdf_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--load-config[Path to the config YAML file. (required)]:load-config:_files"
  "--output-dir[Path to the output directory. (required)]:output-dir:_files -/"
  "--downscale-factor[Downscale the images starting from the resolution used for training. (default\: 2)]:downscale-factor:"
  "--depth-output-name[Name of the depth output. (default\: depth)]:depth-output-name:"
  "--rgb-output-name[Name of the RGB output. (default\: rgb)]:rgb-output-name:"
  "--resolution[Resolution of the TSDF volume or \\\[x, y, z\] resolutions individually. (default\: 128 128 128)]:resolution:"
  "--batch-size[How many depth images to integrate per batch. (default\: 10)]:batch-size:"
  "--use-bounding-box[Whether to use a bounding box for the TSDF volume. (default\: True)]:use-bounding-box:(True False)"
  "--bounding-box-min[Minimum of the bounding box, used if use_bounding_box is True. (default\: -1 -1 -1)]:bounding-box-min:"
  "--bounding-box-max[Minimum of the bounding box, used if use_bounding_box is True. (default\: 1 1 1)]:bounding-box-max:"
  "--texture-method[Method to texture the mesh with. Either \'tsdf\' or \'nerf\'. (default\: nerf)]:texture-method:(tsdf nerf)"
  "--px-per-uv-triangle[Number of pixels per UV triangle. (default\: 4)]:px-per-uv-triangle:"
  "--unwrap-method[The method to use for unwrapping the mesh. (default\: xatlas)]:unwrap-method:(xatlas custom)"
  "--num-pixels-per-side[If using xatlas for unwrapping, the pixels per side of the texture image. (default\: 2048)]:num-pixels-per-side:"
  "--target-num-faces[Target number of faces for the mesh to texture. (default\: 50000)]:target-num-faces:"
)


_shtab_tyro_ns_export() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_tyro_ns_export_options[(I)${(q)one_or_more}*]} + ${_shtab_tyro_ns_export_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_tyro_ns_export_options+=(': :_shtab_tyro_ns_export_commands' '*::: :->ns-export')
  fi
  _arguments -C $_shtab_tyro_ns_export_options

  case $state in
    ns-export)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_tyro_ns_export-$line[1]:"
      case $line[1] in
        cameras) _arguments -C $_shtab_tyro_ns_export_cameras_options ;;
        marching-cubes) _arguments -C $_shtab_tyro_ns_export_marching_cubes_options ;;
        pointcloud) _arguments -C $_shtab_tyro_ns_export_pointcloud_options ;;
        poisson) _arguments -C $_shtab_tyro_ns_export_poisson_options ;;
        tsdf) _arguments -C $_shtab_tyro_ns_export_tsdf_options ;;
      esac
  esac
}



typeset -A opt_args
_shtab_tyro_ns_export "$@"
